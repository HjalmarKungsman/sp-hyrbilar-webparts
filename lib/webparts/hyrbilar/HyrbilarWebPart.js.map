{"version":3,"sources":["webparts/hyrbilar/HyrbilarWebPart.ts"],"names":[],"mappings":"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","file":"webparts/hyrbilar/HyrbilarWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport { SPHttpClient, ISPHttpClientOptions, SPHttpClientResponse } from '@microsoft/sp-http';\r\n//import { SPHttpClient, ISPHttpClientOptions, SPHttpClientResponse, ISPHttpClientBatchOptions, ISPHttpClientBatchCreationOptions, SPHttpClientBatch } from '@microsoft/sp-http';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\n//import { IODataUser, IODataWeb } from '@microsoft/sp-odata-types';\r\n\r\nimport styles from './Hyrbilar.module.scss';\r\nimport * as strings from 'hyrbilarStrings';\r\nimport { IHyrbilarWebPartProps } from './IHyrbilarWebPartProps';\r\n\r\nexport default class HyrbilarWebPart extends BaseClientSideWebPart<IHyrbilarWebPartProps> {\r\n  private listItemEntityTypeName: string = undefined;\r\n\r\n  public render(): void {\r\n    this.domElement.innerHTML = `\r\n      <div class=\"${styles.helloWorld}\">\r\n        <div class=\"${styles.container}\">\r\n          <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n            <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl10 ms-u-xlPush1 ms-u-lgPush1\">\r\n              <p class=\"ms-font-l ms-fontColor-white\">${escape(this.properties.description)}</p>\r\n              <div>\r\n                <div>\r\n                  <button class=\"${styles.button} createList-Button\">\r\n                    <span class=\"${styles.label}\">Create list</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} createField2-Button\">\r\n                    <span class=\"${styles.label}\">Create field (Title2)</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} createField3-Button\">\r\n                    <span class=\"${styles.label}\">Create field (pris)</span>\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button class=\"${styles.button} createView-Button\">\r\n                    <span class=\"${styles.label}\">Create view</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} createViewField2-Button\">\r\n                    <span class=\"${styles.label}\">Add field to view (Title2)</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} createViewField3-Button\">\r\n                    <span class=\"${styles.label}\">Add field to view (Pris)</span>\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button class=\"${styles.button} getViews-Button\">\r\n                    <span class=\"${styles.label}\">Get views</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} getView-Button\">\r\n                    <span class=\"${styles.label}\">Get view</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} getViewField-Button\">\r\n                    <span class=\"${styles.label}\">Get view field</span>\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button class=\"${styles.button} createItem-Button\">\r\n                    <span class=\"${styles.label}\">Create item</span>\r\n                  </button>\r\n                  <button class=\"${styles.button} getListItems-Button\">\r\n                    <span class=\"${styles.label}\">Get items</span>\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <button class=\"${styles.button} createListAndFields-Button\">\r\n                    <span class=\"${styles.label}\">Create list and fields</span>\r\n                  </button>\r\n                <div>\r\n                <div>\r\n                  <button class=\"${styles.button} clearUL-Button\">\r\n                    <span class=\"${styles.label}\">Clear</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white ${styles.row}\">\r\n                <div class=\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\">\r\n                  <div class=\"status\"></div>\r\n                  <ul class=\"items\"><ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n      this.listItemEntityTypeName = undefined;\r\n      this.setButtonsEventHandlers();\r\n  }\r\n\r\n  private setButtonsEventHandlers(): void {\r\n    const webPart: HyrbilarWebPart = this;\r\n    this.domElement.querySelector('button.clearUL-Button').addEventListener('click', () => { webPart.clearUL(); });\r\n    this.domElement.querySelector('button.createList-Button').addEventListener('click', () => { webPart.createList(); });\r\n    this.domElement.querySelector('button.createField2-Button').addEventListener('click', () => { webPart.createField('Title2', 2, true, 'Title2'); });\r\n    this.domElement.querySelector('button.createField3-Button').addEventListener('click', () => { webPart.createField('Pris', 9, true, 'Pris'); });\r\n    this.domElement.querySelector('button.createView-Button').addEventListener('click', () => { webPart.createView('Hyrbil View 2'); });\r\n    this.domElement.querySelector('button.createViewField2-Button').addEventListener('click', () => { webPart.createViewField('Title2'); });\r\n    this.domElement.querySelector('button.createViewField3-Button').addEventListener('click', () => { webPart.createViewField('Pris'); });\r\n    this.domElement.querySelector('button.getViews-Button').addEventListener('click', () => { webPart.getViews(); });\r\n    this.domElement.querySelector('button.getView-Button').addEventListener('click', () => { webPart.getView(); });\r\n    this.domElement.querySelector('button.getViewField-Button').addEventListener('click', () => { webPart.getViewField(); });\r\n    this.domElement.querySelector('button.createItem-Button').addEventListener('click', () => { webPart.createItem(); });\r\n    this.domElement.querySelector('button.getListItems-Button').addEventListener('click', () => { webPart.getListItems(); });\r\n    this.domElement.querySelector('button.createListAndFields-Button').addEventListener('click', () => { webPart.createListAndFields(); });\r\n    \r\n  }\r\n\r\n  public listGuid = '';\r\n  public viewGuid = '';\r\n\r\n  private currentTime() {\r\n    var currentdate = new Date();\r\n    var currentTime: string = currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\r\n    return currentTime;\r\n  }\r\n\r\n  private createList(): void {\r\n    this.updateStatus('Creating list...');\r\n    const spOpts: ISPHttpClientOptions = {\r\n      body: `{ Title: 'Hyrbilar Lista ${this.currentTime()}', BaseTemplate: 100 }`\r\n    };\r\n\r\n    this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists`, SPHttpClient.configurations.v1, spOpts)\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n        response.json().then((responseJSON: JSON) => {\r\n          this.updateStatus('List \"' + responseJSON['Title'] + '\" created...');\r\n          this.listGuid = responseJSON['Id'];\r\n        });\r\n      });\r\n  }\r\n\r\n  private createField(fieldTitle, fieldTypeKind, fieldRequired, fieldStaticName): void {\r\n    const sp1pts: ISPHttpClientOptions = {\r\n      body: `{  'Title': '${fieldTitle}', \r\n                'FieldTypeKind': ${fieldTypeKind},\r\n                'Required': '${fieldRequired}', \r\n                'EnforceUniqueValues': 'False',\r\n                'StaticName': '${fieldStaticName}' \r\n              }`\r\n    };\r\n    this.updateStatus('Creating field...');\r\n    this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists(guid'${this.listGuid}')/Fields`, SPHttpClient.configurations.v1, sp1pts)\r\n      .then((response: SPHttpClientResponse) => {\r\n        \r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n        \r\n        response.json().then((responseJSON: JSON) => {\r\n          this.updateStatus('Field \"' + responseJSON['Title'] + '\" created...');\r\n        });\r\n      });\r\n      \r\n  }\r\n\r\n  private createView(viewTitle): void {\r\n    this.updateStatus('Creating view...');\r\n    //const query = '<Query></Query><RowLimit>34</RowLimit>';\r\n\r\n    const body: string = JSON.stringify({\r\n      '__metadata': {\r\n        'type': `SP.View`\r\n      },\r\n      'Title': `${viewTitle} ${this.currentTime()}`,\r\n      // 'PersonalView': false,\r\n      // 'ViewQuery': `${query}`,\r\n      'DefaultView': false\r\n    });\r\n    \r\n    this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/views`,\r\n      SPHttpClient.configurations.v1,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata',\r\n          'Content-type': 'application/json;odata=verbose',\r\n          'odata-version': ''\r\n        },\r\n        body: body\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n        \r\n        response.json().then((responseJSON: JSON) => {\r\n          this.updateStatus('View \"' + responseJSON['Title'] + '\" created...');\r\n          this.viewGuid = responseJSON['Id'];\r\n        });\r\n      });\r\n  }\r\n\r\n  private createViewField(fieldTitle): void {\r\n    this.updateStatus('Adding field to view...');\r\n    const body: string = JSON.stringify({\r\n      'strField': `${fieldTitle}`\r\n    });\r\n    this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/views('${this.viewGuid}')/ViewFields/AddViewField`,\r\n      SPHttpClient.configurations.v1,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata',\r\n          'Content-type': 'application/json;odata=verbose',\r\n          'odata-version': ''\r\n        },\r\n        body: body\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n        response.json().then((responseJSON: JSON) => {\r\n          this.updateStatus('Field \"' + responseJSON['Title'] + '\" added to view...');\r\n        });\r\n      });\r\n  }\r\n\r\n  private createItem(): void {\r\n    this.updateStatus('Creating item...');\r\n    this.getListItemEntityTypeName()\r\n      .then((listItemEntityTypeName: string): Promise<SPHttpClientResponse> => {\r\n        const time = this.currentTime;\r\n        const body: string = JSON.stringify({\r\n          '__metadata': {\r\n            'type': listItemEntityTypeName\r\n          },\r\n          'Title': `Volvo ${this.currentTime()}`,\r\n          'Title2': `V60`,\r\n          'Pris': `12345`\r\n        });\r\n        return this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/items`,\r\n          SPHttpClient.configurations.v1,\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json;odata=nometadata',\r\n              'Content-type': 'application/json;odata=verbose',\r\n              'odata-version': ''\r\n            },\r\n            body: body\r\n          });\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n      })\r\n      .then((item): void => {\r\n        this.updateStatus(`Item created...`);\r\n      }, (error: any): void => {\r\n        this.updateStatus('Error while creating the item: ' + error);\r\n      });\r\n  }\r\n\r\n  private getListItems(): void {\r\n    this.updateStatus('Getting list items...');\r\n    this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/items`,\r\n      SPHttpClient.configurations.v1,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata',\r\n          'Content-type': 'application/json;odata=verbose',\r\n          'odata-version': ''\r\n        }\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n\r\n        this.updateStatus('List items recived: ');\r\n        response.json().then((responseJSON: JSON) => {\r\n\r\n          var items = responseJSON['value'];\r\n          const itemsHtml: string[] = [];\r\n          \r\n          for (let i: number = 0; i < items.length; i++) {\r\n            itemsHtml.push(`<li>${items[i].Title}, ${items[i].Title2}, ${items[i].Pris}</li>`);\r\n          }\r\n\r\n          this.domElement.querySelector('.items').innerHTML = itemsHtml.join('');\r\n        });\r\n      });\r\n  }\r\n\r\n  private getViews(): void {\r\n    this.updateStatus('Getting list views...');\r\n    this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/views`,\r\n      SPHttpClient.configurations.v1,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata',\r\n          'Content-type': 'application/json;odata=verbose',\r\n          'odata-version': ''\r\n        }\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n\r\n        this.updateStatus('List views recived: ');\r\n        response.json().then((responseJSON: JSON) => {\r\n\r\n          var items = responseJSON['value'];\r\n          const itemsHtml: string[] = [];\r\n          \r\n          for (let i: number = 0; i < items.length; i++) {\r\n            itemsHtml.push(`<li>${items[i].Title}</li>`);\r\n          }\r\n\r\n          this.domElement.querySelector('.items').innerHTML = itemsHtml.join('');\r\n        });\r\n      });\r\n  }\r\n  \r\n  private getView(): void {\r\n    this.updateStatus('Getting list views...');\r\n    this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/views('${this.viewGuid}')`,\r\n      SPHttpClient.configurations.v1,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata',\r\n          'Content-type': 'application/json;odata=verbose',\r\n          'odata-version': ''\r\n        }\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n        console.log(\"response: \", response);\r\n\r\n        this.updateStatus('List views recived: ');\r\n        response.json().then((responseJSON: JSON) => {\r\n          console.log(\"responseJSON: \", responseJSON);\r\n\r\n          // var items = responseJSON['value'];\r\n          // const itemsHtml: string[] = [];\r\n          \r\n          // for (let i: number = 0; i < items.length; i++) {\r\n          //   itemsHtml.push(`<li>${items[i].Title}</li>`);\r\n          // }\r\n\r\n          // this.domElement.querySelector('.items').innerHTML = itemsHtml.join('');\r\n        });\r\n      });\r\n  }\r\n\r\n    private getViewField(): void {\r\n    this.updateStatus('Getting list views...');\r\n    this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')/views('${this.viewGuid}')/ViewFields`,\r\n      SPHttpClient.configurations.v1,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json;odata=nometadata',\r\n          'Content-type': 'application/json;odata=verbose',\r\n          'odata-version': ''\r\n        }\r\n      })\r\n      .then((response: SPHttpClientResponse) => {\r\n        console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n        console.log(\"response: \", response);\r\n\r\n        this.updateStatus('List views recived: ');\r\n        response.json().then((responseJSON: JSON) => {\r\n          console.log(\"responseJSON: \", responseJSON);\r\n          console.log(\"responseJSON['Items']: \", responseJSON['Items']);\r\n\r\n          var items = responseJSON['Items'];\r\n          const itemsHtml: string[] = [];\r\n          \r\n          for (let i: number = 0; i < items.length; i++) {\r\n            itemsHtml.push(`<li>${items[i]}</li>`);\r\n          }\r\n\r\n          this.domElement.querySelector('.items').innerHTML = itemsHtml.join('');\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  private getListItemEntityTypeName(): Promise<string> {\r\n    return new Promise<string>((resolve: (listItemEntityTypeName: string) => void, reject: (error: any) => void): void => {\r\n      if (this.listItemEntityTypeName) {\r\n        resolve(this.listItemEntityTypeName);\r\n        return;\r\n      }\r\n\r\n      this.context.spHttpClient.get(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists('${this.listGuid}')?$select=ListItemEntityTypeFullName`,\r\n        SPHttpClient.configurations.v1,\r\n        {\r\n          headers: {\r\n            'Accept': 'application/json;odata=nometadata',\r\n            'odata-version': ''\r\n          }\r\n        })\r\n        .then((response: SPHttpClientResponse): Promise<{ ListItemEntityTypeFullName: string }> => {\r\n          return response.json();\r\n        }, (error: any): void => {\r\n          reject(error);\r\n        })\r\n        .then((response: { ListItemEntityTypeFullName: string }): void => {\r\n          this.listItemEntityTypeName = response.ListItemEntityTypeFullName;\r\n          resolve(this.listItemEntityTypeName);\r\n        });\r\n    });\r\n  }\r\n\r\n  private createListAndFields() {\r\n    const listName = 'Hyrbilar Lista ' + this.currentTime();\r\n    let listGuid = '';\r\n    this.createList2(listName)\r\n    .then((response: string) => {\r\n      listGuid = response;\r\n      this.createField2(listGuid,'Title2', 2, true, 'Title2')\r\n      .then((response: string) => {\r\n        this.createField2(listGuid,'Pris', 9, true, 'Pris');\r\n      });\r\n    });\r\n  }\r\n\r\n  private createList2(listName: string): Promise<string> {\r\n    return new Promise<string>((resolve: (listGuid: string) => void, reject: (error: any) => void): void => {\r\n      const spOpts: ISPHttpClientOptions = {\r\n        body: `{ Title: '${listName}', BaseTemplate: 100 }`\r\n      };\r\n      this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists`, SPHttpClient.configurations.v1, spOpts)\r\n        .then((response: SPHttpClientResponse) => {\r\n          console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n          response.json().then((responseJSON: JSON) => {\r\n            this.updateStatus('List \"' + responseJSON['Title'] + '\" created...');\r\n            resolve(responseJSON['Id']);\r\n          });\r\n        }, (error: any): void => {\r\n          this.updateStatus('Error while creating the list: ' + error);\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  private createField2 = function(listGuid: string, fieldTitle: string, fieldTypeKind: number, fieldRequired: boolean, fieldStaticName: string): Promise<string> {\r\n    this.updateStatus('Creating field...');\r\n    return new Promise<string>((resolve: (listGuid: string) => void, reject: (error: any) => void): void => {\r\n      const sp1pts: ISPHttpClientOptions = {\r\n        body: `{  'Title': '${fieldTitle}', \r\n                  'FieldTypeKind': ${fieldTypeKind},\r\n                  'Required': '${fieldRequired}', \r\n                  'EnforceUniqueValues': 'False',\r\n                  'StaticName': '${fieldStaticName}' \r\n                }`\r\n      };\r\n      this.context.spHttpClient.post(`${this.context.pageContext.web.absoluteUrl}/_api/web/lists(guid'${listGuid}')/Fields`, SPHttpClient.configurations.v1, sp1pts)\r\n        .then((response: SPHttpClientResponse) => {\r\n          console.log(`Status code & text: ${response.status}, ${response.statusText}`);\r\n          response.json().then((responseJSON: JSON) => {\r\n            this.updateStatus('Field \"' + responseJSON['Title'] + '\" created...');\r\n            resolve(responseJSON['Title']);\r\n          });\r\n        }, (error: any): void => {\r\n          this.updateStatus('Error while creating the field: ' + error);\r\n          reject(error);\r\n        });\r\n    });\r\n  };\r\n\r\n\r\n  \r\n  private clearUL(): void {\r\n    this.updateStatus('Clearing...');\r\n    this.domElement.querySelector('.items').innerHTML = '';\r\n  }\r\n\r\n  private updateStatus(status: string): void {\r\n    this.domElement.querySelector('.status').innerHTML = status;\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}